version: "3.2"
services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ./rabbitmq/data/:/var/lib/rabbitmq/
        - ./rabbitmq/log/:/var/log/rabbitmq
    # networks:
    #     - rabbitmq_sever
  
  db: 
      image: mysql:5.7
      container_name: MCQ_mysqlDB
      hostname: MCQ_mysqlDB
      restart: always
      environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: MCQ_DB
          MYSQL_USER: user
          MYSQL_PASSWORD: password
      ports:
            - "3307:3306"

  mongodb:
      image : mongo
      container_name: mongodb
      environment:
        - PUID=1000
        - PGID=1000
      volumes:
        - /mongodb/database:/data/db
      ports:
        - 27019:27017
      restart: unless-stopped

  mcq_server: 
    build: ./MCQ_server
    container_name: MCQ_server
    
    command:  bundle exec rails s -p 3000 -b '0.0.0.0'
    # rails tmp:cache:clear
    # command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3001 -b '0.0.0.0'"
    volumes: 
        - "./MCQ_server:/app"
    ports: 
        - "3001:3000"
    depends_on:
        - db
        - mongodb
        - rabbitmq
    links:
        - db
        - mongodb
        - rabbitmq
    environment:
        DB_USER: user
        DB_NAME: MCQ_DB
        DB_PASSWORD: password
        DB_HOST: db
        MONGO_HOST: mongodb
        RMQ_HOST: rabbitmq

  scoring_service: 
    build: ./scoring_service
    container_name: scoring_service
    restart: always
    volumes: 
        - "./scoring_service:/app"
    depends_on:
        - db
        - rabbitmq
        - mcq_server
    links:
        - db
        - rabbitmq

    environment:
        DB_USER: user
        DB_NAME: MCQ_DB
        DB_PASSWORD: password
        DB_HOST: db
        RMQ_HOST: rabbitmq



# networks:
#   rabbitmq_sever:
#     driver: bridge